name: TagReleaseBuildPush
on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: gh-runners
    steps:
      - uses: actions/checkout@v3
      
      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Calculate next tag
        id: create_tag
        run: |
          COMMIT_SHA=${{ steps.short-sha.outputs.sha }}
          DATE=$(date +'%Y%m%d')
          UNIX_TIME=$(date +%s)
          HEX_UNIX_TIME=$(printf '%x' $UNIX_TIME)
          echo "tag=v_${COMMIT_SHA}.${HEX_UNIX_TIME}" >> $GITHUB_OUTPUT
          echo "tagname=v_${COMMIT_SHA}.${DATE}" >> $GITHUB_OUTPUT

      - name: Build and push docker image
        id: docker_build
        run : |
          echo "building go_proxy image"
          echo ${{ secrets.GH_RUNNER }} | docker login ghcr.io -u delduked --password-stdin
          docker builder prune --all --force
          docker build -t goprx ./ -f ./go_proxy.dockerfile --no-cache

      - name: Tag docker image
        id: docker_tag
        run: |
          echo "tagging docker image"
          docker tag goprx ghcr.io/TypeTerrors/go_proxy:latest 
          docker tag goprx ghcr.io/TypeTerrors/go_proxy:${{ steps.create_tag.outputs.tag }} 

      - name: push
        id: docker_push
        run: |
          echo "docker push ghcr.io/TypeTerrors/go_proxy:${{ steps.create_tag.outputs.tag }}"
          docker push ghcr.io/TypeTerrors/go_proxy:latest
          docker push ghcr.io/TypeTerrors/go_proxy:${{ steps.create_tag.outputs.tag }}

      - name: clean
        id: docker_rmi 
        run: |
          echo "clean up..."
          docker image rmi goprx
          docker image rmi ghcr.io/TypeTerrors/go_proxy:latest
          docker image rmi ghcr.io/TypeTerrors/go_proxy:${{ steps.create_tag.outputs.tag }}
          docker image prune --all --force
          echo "image ghcr.io/TypeTerrors/go_proxy:${{ steps.create_tag.outputs.tag }} was built and pushed succesfully."

      - name: Create Release
        id: create_release
        if: steps.docker_build.outcome == 'success'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RUNNER }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }} 
          release_name: ${{ steps.create_tag.outputs.tagname }} 
          draft: false
          prerelease: false
